{"ast":null,"code":"import _defineProperty from \"/Users/yuntaekha/Desktop/Practice/React_NodeBird/prepare/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  name: \"yuntaek\",\n  age: 30,\n  password: \"babo\"\n};\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n};\n\nstore.dispatch(changeNickname(\"YT\")); // (이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/yuntaekha/Desktop/Practice/React_NodeBird/prepare/front/reducers/index.js"],"names":["initialState","name","age","password","changeNickname","data","type","store","dispatch","rootReducer","state","action"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,SADa;AAEnBC,EAAAA,GAAG,EAAE,EAFc;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALD;;AAOAE,KAAK,CAACC,QAAN,CAAeJ,cAAc,CAAC,IAAD,CAA7B,E,CAEA;;AACA,IAAMK,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AACpD,UAAQA,MAAM,CAACL,IAAf;AACE,SAAK,iBAAL;AACE,6CACKI,KADL;AAEET,QAAAA,IAAI,EAAEU,MAAM,CAACN;AAFf;AAFJ;AAOD,CARD;;AAUA,eAAeI,WAAf","sourcesContent":["const initialState = {\n  name: \"yuntaek\",\n  age: 30,\n  password: \"babo\",\n};\n\nconst changeNickname = (data) => {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data,\n  };\n};\n\nstore.dispatch(changeNickname(\"YT\"));\n\n// (이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return {\n        ...state,\n        name: action.data,\n      };\n  }\n};\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}